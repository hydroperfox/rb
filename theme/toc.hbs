(() =>
{
    const contentContainer = document.querySelector(".content-container");
    const rootPath = document.querySelector("html").getAttribute("data-root");
    
    // Prepend root path to anchor links at the section navigator
    let sectionNavInnerHTML = `{{{section_nav}}}`.replace(/a href="/g, 'a href="' + rootPath);

    const sectionNav = document.createElement("div");
    sectionNav.className = "section-nav";
    sectionNav.innerHTML = sectionNavInnerHTML;
    contentContainer.insertBefore(sectionNav, contentContainer.children[0]);

    // Expand related sections of table of contents
    const sectionOriginalPath = document.querySelector("html").getAttribute("data-section");
    if (sectionOriginalPath != "")
    {
        const anchors = Array.from(sectionNav.querySelectorAll("a"));
        for (let anchor of anchors)
        {
            anchor = anchor.href.replace(/^(\.\.\/)+/, "");
            if (anchor == sectionOriginalPath)
            {
                let p = anchor.parentElement.parentElement;
                while (p)
                {
                    if (p.className.contains("nestable-section"))
                    {
                        p.setAttribute("data-open", true);
                    }
                    p = anchor.parentElement;
                }
            }
        }
    }

    // Turn visible the current reference
    const referenceOriginalPath = document.querySelector("html").getAttribute("data-reference");
    if (referenceOriginalPath != "")
    {
        const sectionNavRefs = Array.from(sectionNav.querySelectorAll(".section-nav-ref"));
        for (const sectionNavRef of sectionNavRefs)
        {
            if (sectionNavRef.getAttribute("data-path") == referenceOriginalPath)
            {
                sectionNavRef.setAttribute("data-visible", "true");
                break;
            }
        }
    }
})();